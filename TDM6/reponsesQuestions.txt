I) a) Nous ne pouvons pas utiliser la declaration statique car la declaration 
statique utilise la pile pour stocker mais la pile a une capacite maximum 
, qui sera atteinte rapidement par la declaration.
un double est sur 8 octets chacun
2048 x 2048 x 4 = 16 777 216 soit environ 16 Mo, ce qui est trop.

b)  La fonction somme1 accede au tableau en parcourant ligne par ligne, 
alors que la somme2 accede colonne par colonne.
La vitesse d'execution du programme de la somme1 est plus rapide 
car la fonction somme1 stocke les donnees en ligne par ligne dans la memoire,
alors que la fonction somme2 stocke en colonne par colonne ce qui fait 
un eloignement entre les donnees dans la memoire, donc un temps supplementaire pour lire.

c)
program1 :
==316== Memcheck, a memory error detector
==316== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==316== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==316== Command: ./program1
==316==
==316==
==316== HEAP SUMMARY:
==316==     in use at exit: 0 bytes in 0 blocks
==316==   total heap usage: 2,049 allocs, 2,049 frees, 16,793,600 bytes allocated
==316==
==316== All heap blocks were freed -- no leaks are possible
==316==
==316== For lists of detected and suppressed errors, rerun with: -s
==316== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)

program2 :
==317== Memcheck, a memory error detector
==317== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==317== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==317== Command: ./program2
==317==
==317==
==317== HEAP SUMMARY:
==317==     in use at exit: 0 bytes in 0 blocks
==317==   total heap usage: 2,049 allocs, 2,049 frees, 16,793,600 bytes allocated
==317==
==317== All heap blocks were freed -- no leaks are possible
==317==
==317== For lists of detected and suppressed errors, rerun with: -s
==317== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)

II) b) 
root@deskwow:~/code/system_exploitation/TDM6# /usr/bin/time -v ./transfer 1 Source.txt Destination.txt
Copie de 'Source.txt' vers 'Destination.txt' avec la méthode 1...
Copie terminée avec succès.
        Command being timed: "./transfer 1 Source.txt Destination.txt"
        User time (seconds): 0.00
        System time (seconds): 0.00
        Percent of CPU this job got: 0%
        Elapsed (wall clock) time (h:mm:ss or m:ss): 0:00.00
        Average shared text size (kbytes): 0
        Average unshared data size (kbytes): 0
        Average stack size (kbytes): 0
        Average total size (kbytes): 0
        Maximum resident set size (kbytes): 1536
        Average resident set size (kbytes): 0
        Major (requiring I/O) page faults: 0
        Minor (reclaiming a frame) page faults: 73
        Voluntary context switches: 0
        Involuntary context switches: 0
        Swaps: 0
        File system inputs: 0
        File system outputs: 8
        Socket messages sent: 0
        Socket messages received: 0
        Signals delivered: 0
        Page size (bytes): 4096
        Exit status: 0
root@deskwow:~/code/system_exploitation/TDM6# /usr/bin/time -v ./transfer 2 Source.txt Destination.txt
Copie de 'Source.txt' vers 'Destination.txt' avec la méthode 2...
Copie terminée avec succès.
        Command being timed: "./transfer 2 Source.txt Destination.txt"
        User time (seconds): 0.00
        System time (seconds): 0.00
        Percent of CPU this job got: 88%
        Elapsed (wall clock) time (h:mm:ss or m:ss): 0:00.00
        Average shared text size (kbytes): 0
        Average unshared data size (kbytes): 0
        Average stack size (kbytes): 0
        Average total size (kbytes): 0
        Maximum resident set size (kbytes): 1536
        Average resident set size (kbytes): 0
        Major (requiring I/O) page faults: 0
        Minor (reclaiming a frame) page faults: 74
        Voluntary context switches: 1
        Involuntary context switches: 0
        Swaps: 0
        File system inputs: 0
        File system outputs: 8
        Socket messages sent: 0
        Socket messages received: 0
        Signals delivered: 0
        Page size (bytes): 4096
        Exit status: 0
root@deskwow:~/code/system_exploitation/TDM6# /usr/bin/time -v ./transfer 3 Source.txt Destination.txt
Copie de 'Source.txt' vers 'Destination.txt' avec la méthode 3...
Copie terminée avec succès.
        Command being timed: "./transfer 3 Source.txt Destination.txt"
        User time (seconds): 0.00
        System time (seconds): 0.00
        Percent of CPU this job got: 0%
        Elapsed (wall clock) time (h:mm:ss or m:ss): 0:00.00
        Average shared text size (kbytes): 0
        Average unshared data size (kbytes): 0
        Average stack size (kbytes): 0
        Average total size (kbytes): 0
        Maximum resident set size (kbytes): 1536
        Average resident set size (kbytes): 0
        Major (requiring I/O) page faults: 1
        Minor (reclaiming a frame) page faults: 71
        Voluntary context switches: 1
        Involuntary context switches: 0
        Swaps: 0
        File system inputs: 0
        File system outputs: 8
        Socket messages sent: 0
        Socket messages received: 0
        Signals delivered: 0
        Page size (bytes): 4096
        Exit status: 0

Le fichier est trop petit pour voir des différences significatives de temps
Mmap a moins de page faults mineurs mais a un page fault majeur
fread/fwrite montre la meilleure utilisation CPU (88%)
Toutes les méthodes utilisent 8 opérations d'écriture.

III)
Algorithme optimal de Belady :
Référence | Cadres       | Faute
0         | 0 - -       | X
1         | 0 1 -       | X
2         | 0 1 2       | X
3         | 3 1 2       | X (remplace 0 car plus utilisé)
4         | 3 4 2       | X (remplace 1 car plus utilisé)
5         | 3 4 5       | X (remplace 2 car plus utilisé)
4         | 3 4 5       | 4 est deja en memoire
5         | 3 4 5       | 5 est deja en memoire
6         | 6 4 5       | X (remplace 3 car plus utilisé)
7         | 6 7 5       | X (remplace 4 car plus utilisé)
8         | 6 7 8       | X (remplace 5 car plus utilisé)
9         | 9 7 8       | X (remplace 6 car plus utilisé)

Algorithme du moins récemment utilisé :
Référence | Cadres       | Faute
0         | 0 - -       | X
1         | 0 1 -       | X
2         | 0 1 2       | X
3         | 3 1 2       | X (remplace 0 car plus ancien)
4         | 3 4 2       | X (remplace 1 car plus ancien)
5         | 3 4 5       | X (remplace 2 car plus ancien)
4         | 3 4 5       | 4 est deja en memoire
5         | 3 4 5       | 5 est deja en memoire
6         | 6 4 5       | X (remplace 3 car plus ancien)
7         | 7 4 5       | X (remplace 6 car plus ancien)
8         | 7 8 5       | X (remplace 4 car plus ancien)
9         | 7 8 9       | X (remplace 5 car plus ancien)

Algorithme de l'horloge :

Référence | Cadres (R=bit Referenced) | Faute | Explication
0 | 0(1) - - | X | Cadre vide, ajoute 0
| Aiguille → position 1

1 | 0(1) 1(1) - | X | Cadre vide, ajoute 1
| Aiguille → position 2

2 | 0(1) 1(1) 2(1) | X | Cadre vide, ajoute 2
| Aiguille → position 0

3 | 3(1) 1(1) 2(1) | X | Remplace 0:
| - Examine 0(1)→0(0), continue
| - Revient à 0, remplace
| Aiguille → position 1

4 | 3(1) 4(1) 2(1) | X | Remplace 1:
| - Examine 1(1)→1(0), continue
| - Revient à 1, remplace
| Aiguille → position 2

5 | 3(1) 4(1) 5(1) | X | Remplace 2
| - Examine 2(1)→2(0), continue
| - Revient à 2, remplace
| Aiguille → position 0

4 | 3(0) 4(1) 5(1) | - | Page 4 présente
| Bit R de 4 mis à 1
| Aiguille inchangée

5 | 3(0) 4(1) 5(1) | - | Page 5 présente
| Bit R de 5 mis à 1
| Aiguille inchangée

6 | 6(1) 4(1) 5(1) | X | Remplace 3 car R=0
| Aiguille → position 1

7 | 6(1) 7(1) 5(1) | X | Remplace 4
| Aiguille → position 2

8 | 6(1) 7(1) 8(1) | X | Remplace 5
| Aiguille → position 0

9 | 9(1) 7(1) 8(1) | X | Remplace 6
| Aiguille → position 1

Taux de faute est de : 10/12 = 83.33% pour tous les algorithmes.

IV)
root@deskwow:~/code/system_exploitation/TDM6# strace -v ./transfer 1 Source.txt Destination.txt
execve("./transfer", ["./transfer", "1", "Source.txt", "Destination.txt"], ["SHELL=/bin/bash", "WSL2_GUI_APPS_ENABLED=1", "CONDA_EXE=/root/image/imageproce"..., "_CE_M=", "WSL_DISTRO_NAME=Ubuntu", "XML_CATALOG_FILES=file:///root/i"..., "NAME=deskwow", "PWD=/root/code/system_exploitati"..., "GSETTINGS_SCHEMA_DIR=/root/image"..., "LOGNAME=root", "CONDA_PREFIX=/root/image/imagepr"..., "GSETTINGS_SCHEMA_DIR_CONDA_BACKU"..., "MOTD_SHOWN=update-motd", "HOME=/root", "LANG=C.UTF-8", "WSL_INTEROP=/run/WSL/613_interop", "LS_COLORS=rs=0:di=01;34:ln=01;36"..., "WAYLAND_DISPLAY=wayland-0", "CONDA_PROMPT_MODIFIER=", "LESSCLOSE=/usr/bin/lesspipe %s %"..., "TERM=xterm-256color", "_CE_CONDA=", "LESSOPEN=| /usr/bin/lesspipe %s", "USER=root", "CONDA_SHLVL=1", "DISPLAY=:0", "SHLVL=1", "CONDA_PYTHON_EXE=/root/image/ima"..., "XDG_RUNTIME_DIR=/run/user/0/", "CONDA_DEFAULT_ENV=base", "DEBUGINFOD_URLS=", "WSLENV=", "XDG_DATA_DIRS=/usr/local/share:/"..., "PATH=/root/image/imageprocessing"..., "DBUS_SESSION_BUS_ADDRESS=unix:pa"..., "HOSTTYPE=x86_64", "PULSE_SERVER=unix:/mnt/wslg/Puls"..., "_=/usr/bin/strace", "OLDPWD=/root/code/system_exploit"...]) = 0
brk(NULL)                               = 0x5681b0d70000
arch_prctl(0x3001 /* ARCH_??? */, 0x7ffecec7fac0) = -1 EINVAL (Invalid argument)
mmap(NULL, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7e1b5056b000
access("/etc/ld.so.preload", R_OK)      = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/etc/ld.so.cache", O_RDONLY|O_CLOEXEC) = 3
newfstatat(3, "", {st_dev=makedev(0x8, 0x30), st_ino=4351, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=72, st_size=34420, st_atime=1748874932 /* 2025-06-02T16:35:32.891640260+0200 */, st_atime_nsec=891640260, st_mtime=1748874932 /* 2025-06-02T16:35:32.839640275+0200 */, st_mtime_nsec=839640275, st_ctime=1748874932 /* 2025-06-02T16:35:32.843640274+0200 */, st_ctime_nsec=843640274}, AT_EMPTY_PATH) = 0
mmap(NULL, 34420, PROT_READ, MAP_PRIVATE, 3, 0) = 0x7e1b50562000
close(3)                                = 0
openat(AT_FDCWD, "/lib/x86_64-linux-gnu/libc.so.6", O_RDONLY|O_CLOEXEC) = 3
read(3, "\177ELF\2\1\1\3\0\0\0\0\0\0\0\0\3\0>\0\1\0\0\0P\237\2\0\0\0\0\0"..., 832) = 832
pread64(3, "\6\0\0\0\4\0\0\0@\0\0\0\0\0\0\0@\0\0\0\0\0\0\0@\0\0\0\0\0\0\0"..., 784, 64) = 784
pread64(3, "\4\0\0\0 \0\0\0\5\0\0\0GNU\0\2\0\0\300\4\0\0\0\3\0\0\0\0\0\0\0"..., 48, 848) = 48
pread64(3, "\4\0\0\0\24\0\0\0\3\0\0\0GNU\0\325\31p\226\367\t\200\30)\261\30\257\33|\366c"..., 68, 896) = 68
newfstatat(3, "", {st_dev=makedev(0x8, 0x30), st_ino=53503, st_mode=S_IFREG|0755, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=4344, st_size=2220400, st_atime=1748874907 /* 2025-06-02T16:35:07.843648278+0200 */, st_atime_nsec=843648278, st_mtime=1748244300 /* 2025-05-26T09:25:00+0200 */, st_mtime_nsec=0, st_ctime=1748874907 /* 2025-06-02T16:35:07.835648281+0200 */, st_ctime_nsec=835648281}, AT_EMPTY_PATH) = 0
pread64(3, "\6\0\0\0\4\0\0\0@\0\0\0\0\0\0\0@\0\0\0\0\0\0\0@\0\0\0\0\0\0\0"..., 784, 64) = 784
mmap(NULL, 2264656, PROT_READ, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x7e1b50200000
mprotect(0x7e1b50228000, 2023424, PROT_NONE) = 0
mmap(0x7e1b50228000, 1658880, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x28000) = 0x7e1b50228000
mmap(0x7e1b503bd000, 360448, PROT_READ, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x1bd000) = 0x7e1b503bd000
mmap(0x7e1b50416000, 24576, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x215000) = 0x7e1b50416000
mmap(0x7e1b5041c000, 52816, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) = 0x7e1b5041c000
close(3)                                = 0
mmap(NULL, 12288, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7e1b5055f000
arch_prctl(ARCH_SET_FS, 0x7e1b5055f740) = 0
set_tid_address(0x7e1b5055fa10)         = 20354
set_robust_list(0x7e1b5055fa20, 24)     = 0
rseq(0x7e1b505600e0, 0x20, 0, 0x53053053) = 0
mprotect(0x7e1b50416000, 16384, PROT_READ) = 0
mprotect(0x56819302b000, 4096, PROT_READ) = 0
mprotect(0x7e1b505a5000, 8192, PROT_READ) = 0
prlimit64(0, RLIMIT_STACK, NULL, {rlim_cur=8192*1024, rlim_max=RLIM64_INFINITY}) = 0
munmap(0x7e1b50562000, 34420)           = 0
newfstatat(1, "", {st_dev=makedev(0, 0x3c), st_ino=3, st_mode=S_IFCHR|0600, st_nlink=1, st_uid=0, st_gid=5, st_blksize=1024, st_blocks=0, st_rdev=makedev(0x88, 0), st_atime=1748877914 /* 2025-06-02T17:25:14.279948407+0200 */, st_atime_nsec=279948407, st_mtime=1748877914 /* 2025-06-02T17:25:14.279948407+0200 */, st_mtime_nsec=279948407, st_ctime=1748873986 /* 2025-06-02T16:19:46.659948283+0200 */, st_ctime_nsec=659948283}, AT_EMPTY_PATH) = 0
getrandom("\x2c\xfc\x31\x2b\x75\xc3\xc7\xd3", 8, GRND_NONBLOCK) = 8
brk(NULL)                               = 0x5681b0d70000
brk(0x5681b0d91000)                     = 0x5681b0d91000
write(1, "Copie de 'Source.txt' vers 'Dest"..., 67Copie de 'Source.txt' vers 'Destination.txt' avec la méthode 1...
) = 67
openat(AT_FDCWD, "Source.txt", O_RDONLY) = 3
openat(AT_FDCWD, "Destination.txt", O_WRONLY|O_CREAT|O_TRUNC, 0644) = 4
read(3, "Je suis le premier message.\r\nLe "..., 8191) = 88
write(4, "Je suis le premier message.\r\nLe "..., 88) = 88
read(3, "", 8191)                       = 0
close(3)                                = 0
close(4)                                = 0
write(1, "Copie termin\303\251e avec succ\303\250s.\n", 30Copie terminée avec succès.
) = 30
exit_group(0)                           = ?
+++ exited with 0 +++

Description :

Initialisation du programme :
execve("./transfer", ["./transfer", "1", "Source.txt", "Destination.txt"]...) # Demarre le programme avec ses arguments

Gestion de la memoire :
brk(NULL)                   # Obtient l'adresse actuelle du break
mmap(...)                   # Alloue de la memoire (plusieurs fois)
mprotect(...)              # Modifie la protection memoire

Chargement des bibliotheques :
access("/etc/ld.so.preload"...)    # Verifie les bibliothèques prechargees
openat(...libc.so.6...)           # Ouvre la bibliotheque C
read(3,...)                       # Lit le contenu de la bibliotheque

Operations sur les fichiers :
# Ouverture des fichiers
openat(AT_FDCWD, "Source.txt", O_RDONLY) = 3
openat(AT_FDCWD, "Destination.txt", O_WRONLY|O_CREAT|O_TRUNC, 0644) = 4

# Lecture/Écriture
read(3, "Je suis le premier message...", 8191) = 88
write(4, "Je suis le premier message...", 88) = 88

# Fermeture
close(3)
close(4)

Affichage :
write(1, "Copie de 'Source.txt'...", 67)
write(1, "Copie terminée avec succès.\n", 30)

VI)
root@deskwow:~/code/system_exploitation/TDM6# ./xyz fichier_trou
root@deskwow:~/code/system_exploitation/TDM6# ls -l fichier_trou
-rw-r--r-- 1 root root 100003 Jun  2 17:44 fichier_trou
root@deskwow:~/code/system_exploitation/TDM6# ls -ls fichier_trou
8 -rw-r--r-- 1 root root 100003 Jun  2 17:44 fichier_trou
root@deskwow:~/code/system_exploitation/TDM6# ./xyz /tmp/fichier_trou
root@deskwow:~/code/system_exploitation/TDM6# ls -l /tmp/fichier_trou
-rw-r--r-- 1 root root 100003 Jun  2 17:45 /tmp/fichier_trou
root@deskwow:~/code/system_exploitation/TDM6# ls -ls /tmp/fichier_trou
8 -rw-r--r-- 1 root root 100003 Jun  2 17:45 /tmp/fichier_trou
root@deskwow:~/code/system_exploitation/TDM6# stat /tmp/fichier_trou
  File: /tmp/fichier_trou
  Size: 100003          Blocks: 16         IO Block: 4096   regular file
Device: 830h/2096d      Inode: 4176        Links: 1
Access: (0644/-rw-r--r--)  Uid: (    0/    root)   Gid: (    0/    root)
Access: 2025-06-02 17:45:29.040445976 +0200
Modify: 2025-06-02 17:45:29.040445976 +0200
Change: 2025-06-02 17:45:29.040445976 +0200
 Birth: 2025-06-02 17:45:29.040445976 +0200
root@deskwow:~/code/system_exploitation/TDM6# stat fichier_trou
  File: fichier_trou
  Size: 100003          Blocks: 16         IO Block: 4096   regular file
Device: 830h/2096d      Inode: 2274        Links: 1
Access: (0644/-rw-r--r--)  Uid: (    0/    root)   Gid: (    0/    root)
Access: 2025-06-02 17:44:56.064973894 +0200
Modify: 2025-06-02 17:44:56.064973894 +0200
Change: 2025-06-02 17:44:56.064973894 +0200
 Birth: 2025-06-02 17:44:56.064973894 +0200

Le nombre de blocs utilisés est 16 dans les 2 cas selon ls -ls.
